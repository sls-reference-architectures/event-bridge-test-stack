service: event-bridge-test

frameworkVersion: "3"

custom:
  stage: ${opt:stage, self:provider.stage}
  # NOTE: For normal usage, replace the following dynamic name with your static bus name
  eventBusName: ${self:service}-${self:custom.stage}-message-test

provider:
  architecture: arm64
  deploymentBucket:
    name: com.reference-architecture.deploys
    serverSideEncryption: AES256
  environment:
    NODE_ENV: ${self:custom.stage}
    LOG_LEVEL: DEBUG
    SAMPLE_DEBUG_LOG_RATE: "1"
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
  logRetentionInDays: 7
  name: aws
  region: us-east-1
  runtime: nodejs18.x
  stage: dev
  tags:
    lumigo:auto-trace: "true"

functions:
  writeMessages:
    handler: src/messageWriter.default
    events:
      - eventBridge:
          # For your normal usage, you would use the next line for your existing bus ARN
          # eventBus: arn:aws:events:${self:provider.region}:123456789:event-bus/${self:custom.eventBusName}
          eventBus: !Ref TestEventBus
          pattern:
            source:
              - com.your-app.test
            detail-type:
              - new

resources:
  Resources:
    # NOTE - you likely won't do the following, but will instead use your existing Event Bus.
    #  This just allows us to dynamically demonstrate the test.
    TestEventBus:
      Type: AWS::Events::EventBus
      Properties:
        Name: ${self:custom.eventBusName}

    TestEventsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: event-bridge-test-stack-events
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true

plugins:
  - serverless-esbuild
  - serverless-deployment-bucket
